[tool.poetry]
name = "python_app_template"
version = "0.3.0"
description = ""
authors = ["Tom Harrison <tomharrisonjr@gmail.com>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.12.1"
requests = "^2.31.0"
httpx = "^0.26.0"
fastapi = "^0.109.1"
uvicorn = {extras = ["standard"], version = "^0.25.0"}

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-sugar = "^0.9.7"
respx = "^0.20.2"
pytest-asyncio = "^0.23.3"
trio = "^0.23.2"
pytest-cov = "^4.1.0"

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "def __repr__",
    "def __str__",
    "raise NotImplementedError",
]

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
addopts = "-p no:cacheprovider" # deactivate pytest caching






[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}




[tool.poetry.group.semver.dependencies]
python-semantic-release = "^8.0.0"

#[tool.semantic_release]
#branch = "main"
#version_variable = ["src/python_app_template/__init__.py:__version__"]
#version_toml = ["pyproject.toml:tool.poetry.version"]
#version_source = "tag"
#commit_message = "{version} [skip ci]" # skip ci pipeline for version bumps
#commit_version_number = true
#tag_commit = true
#upload_to_pypi = false
#upload_to_release = false
#hvcs = "github"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_variable = ["version.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true



[tool.poetry.group.lint.dependencies]
flake8 = "^6.1.0"
black = "^23.12.1"
isort = "^5.13.2"
mypy = "^1.4.0"

[tool.mypy]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.12"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
